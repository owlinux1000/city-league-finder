
on:
  workflow_call:
    inputs:
      os:
        description: 'Operating system to run the tests on'
        required: true
        type: string
      go-version-file:
        description: 'Path to the go version file'
        default: './go.mod'
        type: string
      go_licenses_package:
        description: 'Path to the target package for checking the licenses'
        type: string
      cache-dependency-path:
        description: 'Path to the cache dependency file'
        default: './go.sum'
        type: string
      root:
        description: 'The root of the go package'
        default: './'
        type: string
jobs:
  test:
    runs-on: "${{ inputs.os }}"
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Setup go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: "${{ inputs.go-version-file }}"
          cache-dependency-path: "${{ inputs.cache-dependency-path }}"

      - name: Install tools
        run: |
          go install github.com/google/go-licenses/v2@v2.0.1
          go install github.com/suzuki-shunsuke/github-comment/v6/cmd/github-comment@v6.3.4
          
      - name: Check licenses
        run: github-comment exec -- go-licenses check .
      - name: Save the licenses
        run:
          github-comment exec -- go-licenses save . --save_path third_party_licenses

      - name: Setup a directory for saving the exported licenses
        run: mkdir -p third_party_licenses/go

      - name: Save the go license
        run: |
          version=$(go env GOVERSION)
          github-comment exec -- curl -Lq -o third_party_licenses/go/LICENSE --retry 5 "https://raw.githubusercontent.com/golang/go/refs/tags/go${version#go}/LICENSE"

      - name: Release the binary
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
